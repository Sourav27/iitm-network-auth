{
  "name": "iitm-network-auth",
  "tagline": "Authentication library for IIT Madras campus network",
  "body": "iitm-network-auth\r\n-----------------\r\n[![npm version](https://badge.fury.io/js/iitm-network-auth.svg)](https://badge.fury.io/js/iitm-network-auth)\r\n\r\nnpm module to authenticate against the IIT Madras campus network using openLDAP credentials\r\n\r\n\r\n## Installation\r\n```\r\nnpm install iitm-network-auth --save\r\n```\r\n\r\n## Usage\r\n\r\n### Import the module  \r\n```js\r\nvar IITMNetworkAuth = require('iitm-network-auth');\r\n\r\n```\r\n\r\n### Create an instance\r\n- Initialise with username, password and mode of login  \r\n    Modes that are availabe: \r\n    - `nfw`: For the new firewall login (through `https://nfw.iitm.ac.in`)\r\n    - TODO: `netaccess`: For the existing netaccess login (through `https://netaccess.iitm.ac.in`)\r\n```js\r\nvar auth = new IITMNetworkAuth('<username>', '<password>', '<mode>');\r\n```\r\n\r\n### Login\r\n```js\r\nauth.login();\r\n```\r\n\r\n### Logout\r\n```js\r\nauth.logout();\r\n```\r\n### Keep the session alive\r\nThe module can keep an authentication session alive by sending request to keepalive url.  \r\nThe current inteval is set to `9 minutes` as the firewall keeps a session for 10 minutes.\r\n```js\r\nauth.start_refresh();\r\n```\r\n\r\n### Stop refreshing the session\r\n```js\r\nauth.stop_refresh();\r\n```\r\n\r\n### Refresh the session manually  \r\n```js\r\nauth.refresh()\r\n```\r\n\r\n### Get login status\r\n```js\r\nvar logged_in = auth.is_logged_in();\r\n```\r\n### Event listeners\r\nThe module emits events to denote certain actions as they happen. Any client code can subscribe to these events and take necessary actions  \r\n- Get the event emitter  \r\n```\r\nvar emitter = auth.get_emitter();\r\n```\r\n- Add event listeners\r\n```js\r\n// do something when an error happens\r\nemitter.on('error', function (e) {\r\n    console.log(e.data); // log error details to the console\r\n});\r\n\r\n// do something when a login happens\r\nemitter.on('log_in', function (e) {\r\n    console.log(e.data); // log details to the console\r\n});\r\n\r\n// do something when a logout happens\r\nemitter.on('log_out', function (e) {\r\n    console.log(e.data); // log details to the console\r\n});\r\n\r\n// do something when a session is refreshed\r\nemitter.on('session_refresh', function (e) {\r\n    console.log(e.data); // log details to the console\r\n});\r\n\r\n// do something when a refresh timer is started/stopped\r\nemitter.on('refresh_timer', function (e) {\r\n    console.log(e.data.running); // log status to the consle (true/false)\r\n});\r\n```\r\n\r\n### Set new credentials\r\n```js\r\nauth.set_credentials('<username>', '<password>');\r\n```\r\n\r\n## TODO:\r\n- Implement `netaccess` mode\r\n- Improve documentation\r\n\r\n## Contributing\r\nPull requests are welcome\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}